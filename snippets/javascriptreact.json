{
  // Place your snippets for javascriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "classname": {
    "prefix": "cln",
    "body": "className='${1:class}' "
  },
  "dva model": {
    "prefix": "dva",
    "body": [
      "export default {",
      "    namespace: '${1:namespace}',",
      "    state: {},",
      "    reducers: {",
      "        save(state, { payload }) {",
      "        }",
      "    },",
      "    effects: {",
      "        * ${2:effect} ({ payload }, { put, call }) {",
      "",
      "        }",
      "    }",
      "};"
    ],
    "description": "dva model"
  },
  "taro redux": {
    "prefix": "tredux",
    "body": ["import { connect } from '@tarojs/redux'"]
  },
  "saga request": {
    "prefix": "sagarequest",
    "body": ["import { ${1:get} } from '@doctorwork/saga/dist/request'"]
  },
  "saga": {
    "prefix": "saga",
    "body": ["import { ${1:request} } from '@doctorwork/saga'"]
  },
  "taro class": {
    "prefix": "taroc",
    "body": [
      "import Taro, { Component } from '@tarojs/taro';",
      "import { Image, Text, View } from '@tarojs/components';",
      "",
      "export default class ${1:${TM_FILENAME_BASE}} extends Component {",
      "   render() {",
      "       ",
      "   }",
      "}"
    ]
  },
  "taro class redux": {
    "prefix": "tarocr",
    "body": [
      "import Taro, { Component } from '@tarojs/taro';",
      "import { connect } from '@tarojs/redux'",
      "import { Image, Text, View } from '@tarojs/components';",
      "",
      "@connect(({ ${0:${TM_FILENAME_BASE}} }) => ({}))",
      "export default class ${1:${TM_FILENAME_BASE}} extends Component {",
      "   render() {",
      "       ",
      "   }",
      "}"
    ]
  },
  "import style": {
    "prefix": "imstyl",
    "body": [
      "import styles from './${0:style}.styl';",
      "require('./${0:style}.styl')"
    ]
  },
  "connect": {
    "prefix": "tcon",
    "body": "@connect(({ ${0:${TM_FILENAME_BASE}} }) => ({}))"
  },
  "update immutable": {
    "prefix": "imupdate",
    "body": "import update from 'immutability-helper';"
  },
  "eslint-disable": {
    "prefix": "eslint-disable",
    "body": ["/* eslint-disable ${1:rule} */", "$0/* eslint-enable ${1} */"],
    "description": "ESLint disable wrapper"
  },
  "eslint-disable-line": {
    "prefix": "eslint-disable-line",
    "body": ["// eslint-disable-line ${0:rule}"],
    "description": "ESLint disable line"
  },
  "eslint-disable-next-line": {
    "prefix": "eslint-disable-next-line",
    "body": ["// eslint-disable-next-line ${0:rule}"],
    "description": "ESLint disable next line"
  }
}
